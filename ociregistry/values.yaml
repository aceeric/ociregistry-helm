image:
  # -- The image registry
  registry: quay.io
  # -- The image repository
  repository: appzygy/ociregistry
  # -- The image tag
  tag: 1.1.0
  # -- Specify a digest to override the tag
  digest:
  # -- The image pull policy
  pullPolicy: IfNotPresent

# -- Supports pullng the image from a registry that requires authentication
imagePullSecrets: []

# -- Overrides the default naming logic that concats the release and chart name.
nameOverride: ""

# -- Overrides the default naming logic that concats the release and chart name.
fullnameOverride: ""

# -- Causes command-line args to be templated into the server Deployment spec to
# change the default server behavior.
configs:
  logLevel: info
  # -- Allows overriding the default port of 8080. If you change the port, you must
  # also change the `service.port` value to match.
  port: ""
  # -- The configPath does not need to be defined if `upstreamConfig` is defined.
  # However, if you specify both, the 'configPath' value must match
  # `upstreamConfig.mountPath`.
  configPath: ""
  # -- Allows overriding the default image path of `/var/lib/ociregistry`. By default the
  # server will use this path for image storage. If you mount the storage at some other
  # path you must change the `configs.imagePath` to match.
  imagePath: 
  # -- Enables overriding the default timeout of 60000 milliseconds (6 minutes) to
  # pull from an upstream server.
  pullTimeout: ""

# --Defines the service account configuration
serviceAccount:
  # -- Creates a service account for the server
  create: true
  # -- Automounts a token
  automount: true
  # -- Provide any additional annotations you need
  annotations: {}
  # -- Overrides the default service name
  name: ""

# -- Provide any additional pod annotations
podAnnotations: {}
# -- Provide any additional pod labels
podLabels: {}
# -- Provide any additional pod security context
podSecurityContext: {}
# -- Provide any additional deployment security context
securityContext: {}

# -- service defines the Service resource. Since the intended use case
# is for you to configure containerd to mirror to the registry server,
# the server has to be reachable by containerd running on the host. Therefore
# the default configuration is to create a NodePort service, which
# makes the registry available to containerd on each host. If you change the
# port, you must also specify the `configs.port` above.
service:
  type: NodePort
  nodePort: 31080
  port: 8080

# -- Configures an ingress for access to the registry outside the cluster. (Could
# be used to run the registry in one cluster to cache for multiple other clusters.)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #- secretName: chart-example-tls
  #  hosts:
  #  - chart-example.local

# -- Specify requests and limits. Manifests are cached in memory to speed response
# time. Manifests vary greatly in size but - if an average manifest is 3K and your
# cluster has 100 images this would result in the server using 300K of RAM.
resources: {}

# -- Use this to mount other volumes.
volumes: []

# -- Volume Mounts provides the container mount paths. Since this is a caching
# registry it needs a place to store image data.
volumeMounts:
# -- When you select a `persistence` type, a volume will be templated named 'images'.
# By default the server will look in the `mountPath`. If you mount the storage at some
# other path you must change the `configs.imagePath` to match.
- name: images
  # -- Shows the default value hard-coded into the server
  mountPath: /var/lib/ociregistry
  readOnly: false

# -- Defines a node selector
nodeSelector: {}
# -- Defines Pod tolerations
tolerations: []
# -- Defines Pod affinity
affinity: {}

# -- Persistence establishes the persistence strategy. For ephemeral storage (i.e. for
# testing or experimentation) enable the `emptyDir` option. If you have a storage
# provisioner, enable the persistentVolumeClaim option. The `hostPath` option uses
# host storage. `emptyDir` is enabled by default.
persistence:
  # -- Creates a PVC for persistent storage
  persistentVolumeClaim:
    # -- Persistent storage is disabled by default. Set to `true` to enable persistent storage
    enabled: false
    # -- If you will bind to an existing PVC, specify the name here, otherwise leave
    # the name blank and fill in the `newClaimSpec` hash.
    existingClaimName: ""
    # -- Supply the parameters for a new PVC
    newClaimSpec:
      # -- Access mode(s) supported by the storage class
      accessModes:
      - ReadWriteOnce
      # -- Volume mode supported by the storage class
      volumeMode: Filesystem
      # -- Required storage capacity
      resources:
        requests:
          storage: 2Gi
      # -- Leave the storage class empty to select the default cluster storage
      # class, or specify a class if multiple are available
      storageClassName: ""
      # -- specify any necessary storage selectors.
      selector: {}
      #  matchLabels: {}
      #  matchExpressions: []
  # -- Implements host path storage for the server. Suitable for testing and a quick
  # capability evaluation.
  hostPath:
    # -- Host path is disabled by default
    enabled: false
    type: DirectoryOrCreate
    # -- By default the server will use this path for image storage. If you mount the
    # storage at some other path you must change the `configs.imagePath` to match.
    path: /var/lib/ociregistry
  # -- Implements Empty Dir storage for the server. Suitable for testing and a quick
  # capability evaluation.
  emptyDir:
    # -- This is the default option to facilitate a quick start
    enabled: true
    # -- Provides a size limit to the storage
    sizeLimit: 2Gi

# -- Supports providing auth and TLS configuration for upstream registries. If not
# provided, then all upstreams will be tried by the server as anonymous with
# server cert verification using the OS trust store on the host. The values shows
# a fictional configuration with all allows hash keys populated.
upstreamConfig: {}
#  mountPath: /var/ociregistry/config
#  registries:
#  - name: my-upstream:8800
#    description: Basic auth, mTLS with mounted CA
#    auth:
#      user: frobozz
#      password: flathead
#    tls:
#      insecure_skip_verify: true
#      ca:   /etc/pki/certs/ca.crt
#      cert: /etc/pki/certs/client.crt
#      key:  /etc/pki/certs/client.key
